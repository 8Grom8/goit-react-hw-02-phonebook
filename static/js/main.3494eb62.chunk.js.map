{"version":3,"sources":["components/Contacts/ContactForm/ContactForm.jsx","components/Contacts/Filter/Filter.jsx","components/Contacts/ListItem/ListItem.jsx","components/Contacts/ContactList/ContactList.jsx","components/Contacts/Contacts.jsx","components/App/App.js","index.js"],"names":["AddForm","state","id","uuid","name","number","handleChange","e","setState","target","value","onSubmit","preventDefault","props","handleSubmit","this","type","pattern","title","required","onChange","className","Component","TodosFilter","filter","htmlFor","TodosListItem","item","handleDelete","onClick","TodosList","items","map","ListItem","Todos","prevState","term","some","alert","newTodo","formattedFilter","toLowerCase","trim","filteredItems","includes","ContactForm","Filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3494eb62.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\n\r\nclass AddForm extends Component {\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    id : uuid(),\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n        \r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.handleSubmit(this.state);\r\n    this.setState({ name: \"\", number: \"\" });\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={this.handleChange}\r\n          value={this.state.name}\r\n        />\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={this.handleChange}\r\n          value={this.state.number}\r\n        />\r\n        <button type=\"submit\" className=\"btnStyle\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddForm;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst TodosFilter = ({ handleChange, filter }) => {\r\n  return (\r\n    <div className=\"filterStyle\">\r\n      <label htmlFor=\"filter\">Find contacts by name</label>\r\n      <input\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        className=\"px-4 py-3 rounded-md\"\r\n        onChange={handleChange}\r\n        value={filter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nTodosFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TodosFilter;","import PropTypes from \"prop-types\";\r\n\r\nconst TodosListItem = ({ item, handleDelete }) => {\r\n  const {  name, number } = item;\r\n\r\n  return (\r\n    <li>\r\n      <div className=\"flex justify-content-between\">\r\n        <span> { name }:{number}</span>\r\n        <button onClick={handleDelete}>Delete</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTodosListItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodosListItem;","import PropTypes from \"prop-types\";\r\nimport ListItem from \"../ListItem/ListItem\";\r\n\r\nconst TodosList = ({ items,  handleDelete }) => {\r\n  return (\r\n    <ul>\r\n      {items.map((item) => (\r\n        <ListItem\r\n          key={item.id}\r\n          item={item}\r\n          handleDelete={() => handleDelete(item.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nTodosList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired }))\r\n    .isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodosList;\r\n","import { Component } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport List from \"./ContactList/ContactList\";\r\n\r\nclass Todos extends Component {\r\n  state = {\r\n    items: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    this.setState((prevState) => ({\r\n      items: prevState.items.filter((item) => item.id !== id),\r\n    }));\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (term) => {\r\n    if (!term) {\r\n      alert(\"Поле не может быть пустым!\");\r\n      return;\r\n    }\r\n\r\n    const isDuplicate = this.state.items.some((item) => item.name === term.name);\r\n    if (isDuplicate) {\r\n      alert(\"Contact \" + term.name);\r\n      return;\r\n    }\r\n\r\n    const newTodo = {\r\n      id: uuid(),\r\n      name: term.name,\r\n      number: term.number,\r\n    };\r\n\r\n    this.setState((prevState) => {\r\n      const newItems = [newTodo, ...prevState.items];\r\n      return { items: newItems };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { items, filter } = this.state;\r\n    const formattedFilter = filter.toLowerCase().trim();\r\n    const filteredItems = items.filter((item) =>\r\n      item.name.toLowerCase().includes(formattedFilter)\r\n    );\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm handleSubmit={this.handleSubmit} />\r\n        <h2>Contacts</h2>\r\n        <Filter filter={filter} handleChange={this.handleChange} />\r\n        <List items={filteredItems} handleDelete={this.handleDelete} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todos;\r\n","import React from \"react\";\r\nimport Todos from \"../Contacts/Contacts\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Todos />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\nimport \"./styles/global.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}